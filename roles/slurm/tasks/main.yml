- name: Copy RPMs to "/tmp"
  ansible.posix.synchronize:
    src: rpms/
    dest: /tmp/slurm_rpms/
    recursive: true
    use_ssh_args: true
  when: ansible_facts['os_family'] == "RedHat"

- name: Copy DEBs to "/tmp"
  ansible.posix.synchronize:
    src: debs/
    dest: /tmp/slurm_debs/
    recursive: true
    use_ssh_args: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install munge
  ansible.builtin.package:
    name: munge
    state: present

- name: Copy munge key to /etc/munge/munge.key
  ansible.builtin.copy:
    src: munge.key
    dest: /etc/munge/munge.key
    owner: munge
    group: root
    mode: '0600'
  notify: enable-munge-service

- name: "Generate /etc/slurm/slurm.conf"
  ansible.builtin.template:
    src: slurm.conf.jinja2
    dest: /etc/slurm/slurm.conf
    owner: slurm
    group: root
    mode: "0664"
  when: "'nfsd' in group_names"
  notify:
    - enable-slurmd-service
    - enable-slurmctld-service

- name: "Generate /etc/slurm/cgroup.conf"
  ansible.builtin.template:
    src: cgroup.conf.jinja2
    dest: /etc/slurm/cgroup.conf
    owner: slurm
    group: root
    mode: "0664"
  when: "'nfsd' in group_names"
  notify:
    - enable-slurmd-service

- name: "Create /etc/slurm/state"
  ansible.builtin.file:
    path: /etc/slurm/state
    state: directory
    owner: slurm
    group: root
    mode: '0770'
  when: "'nfsd' in group_names"

- name: "Create /etc/slurm/logs"
  ansible.builtin.file:
    path: /etc/slurm/logs
    state: directory
    owner: slurm
    group: root
    mode: '0775'
  when: "'nfsd' in group_names"

- name: "Install slurm"
  ansible.builtin.dnf:
    name:
      - libaec
      - "/tmp/slurm_rpms/slurm-{{ slurm_version }}.el{{ ansible_facts['distribution_major_version'] }}.x86_64.rpm"
      - "/tmp/slurm_rpms/slurm-devel-{{ slurm_version }}.el{{ ansible_facts['distribution_major_version'] }}.x86_64.rpm"
    state: present
    disable_gpg_check: true
  when: ansible_facts['os_family'] == "RedHat"

- name: "Install slurm"
  ansible.builtin.apt:
    deb: "/tmp/slurm_debs/{{ item }}_{{ slurm_version }}_amd64.deb"
    state: present
    allow_unauthenticated: true
  when: ansible_facts['os_family'] == "Debian"
  with_items:
    - slurm-smd
    - slurm-smd-dev
    - slurm-smd-client

- name: Install slurmdbd
  ansible.builtin.include_tasks:
    file: slurmdbd.yml
  when: "inventory_hostname == slurmctld_primary or 'nfsd' in group_names"

- name: Install slurmctld
  ansible.builtin.include_tasks:
    file: slurmctld.yml
  when: "'slurmctld' in group_names or 'nfsd' in group_names"
  
- name: Install slurmd
  ansible.builtin.include_tasks:
    file: slurmd.yml
  when: "'compute' in group_names"
