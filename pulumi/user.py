from dataclasses import dataclass, field
from typing import Any

import common

@dataclass
class User:
    """ A cluster user
    """

    name: str
    """ User name """

    password: str|None = None
    """ User password (defaults to `self.name`) """

    uid: int|None = None
    """ User numerical id (autogenerated when `None`) """

    groups: set[str] = field(default_factory=set)
    """ Set of groups for this user """

    ssh_authorized_keys: list[str] = field(default_factory=list)
    """ List of ssh authorized public keys """

    def __post_init__(self):
        common.check_identifier(self.name, "user name")
        map(common.check_identifier, self.groups)
        if self.password is None:
            self.password = self.name

    def to_json(self) -> dict[str, Any]:
        return dict(
            name=self.name,
            homedir='/root' if self.name == 'root' else '/home/' + self.name,
            password=self.name if self.password is None else self.password,
            uid=self.uid, # FIXME:
            groups=list(self.groups),
            ssh_authorized_keys=list(self.ssh_authorized_keys)
        )

